---
# TODO: allow user to set computer sleep time in a variable
- name: check the current computer sleep time
  command: systemsetup -getcomputersleep
  changed_when: false
  become: yes
  become_method: sudo
  register: current_computer_sleep_time

- name: set the computer sleep time
  command: systemsetup -setcomputersleep Never
  become: yes
  become_method: sudo
  when: "'Never' not in '{{ current_computer_sleep_time.stdout }}'"

# TODO: allow user to set display sleep time in a variable
- name: check the current display sleep time
  command: systemsetup -getdisplaysleep
  changed_when: false
  become: yes
  become_method: sudo
  register: current_display_sleep_time

- name: set the display sleep time
  command: systemsetup -setdisplaysleep Never
  become: yes
  become_method: sudo
  when: "'Never' not in '{{ current_display_sleep_time.stdout }}'"

- name: check the current timezone
  command: systemsetup -gettimezone
  changed_when: false
  become: yes
  become_method: sudo
  register: current_timezone

- name: set the timezone
  command: systemsetup -settimezone {{ timezone }}
  become: yes
  become_method: sudo
  when: "'{{ timezone }}' not in '{{ current_timezone.stdout }}'"

- name: check flags for the user library folder
  changed_when: false
  command: ls -lOd ~/Library
  register: library_flags

- name: unhide the user library folder
  command: chflags nohidden ~/Library
  when: "'hidden' in library_flags"

- name: create the development folder
  file: path="{{ development_dir }}" state=directory

- name: create the screenshots folder
  file: path=~/Pictures/Screenshots state=directory

- name: set operating system defaults
  plist:
    dest: "{{ item.domain }}"
    # Note that we must access values using the square brackets or Ansible
    # casts all values to strings
    values: "{{ item['values'] }}"
    container: "{{ item.container | default(None) }}"
  with_items: "{{ os_defaults }}"

- name: create the directory to store the dot file
  file: path={{ item.dest | dirname }} state=directory
  when: item.dest != '/' and item.dest != '~'
  with_items: "{{ dotfiles }}"

- name: install the dot file requested
  copy: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode | default('0644') }}
  with_items: "{{ dotfiles }}"
